
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  profileImage: 'profileImage',
  passwordHash: 'passwordHash',
  isEmailVerified: 'isEmailVerified',
  isPhoneVerified: 'isPhoneVerified',
  fcmToken: 'fcmToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  phone: 'phone',
  isDefault: 'isDefault',
  label: 'label',
  latitude: 'latitude',
  longitude: 'longitude',
  inServiceZone: 'inServiceZone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BrandScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  colors: 'colors',
  gasColor: 'gasColor',
  description: 'description',
  hotline: 'hotline',
  website: 'website',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  pricePurchase: 'pricePurchase',
  priceRefill: 'priceRefill',
  currentName: 'currentName',
  usage: 'usage',
  size: 'size',
  weight: 'weight',
  unit: 'unit',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  brandId: 'brandId',
  categoryId: 'categoryId',
  typeId: 'typeId',
  rating: 'rating',
  imageUrl: 'imageUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShopScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  state: 'state',
  latitude: 'latitude',
  longitude: 'longitude',
  phone: 'phone',
  email: 'email',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShopStockScalarFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  productId: 'productId',
  quantity: 'quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orderNumber: 'orderNumber',
  subtotal: 'subtotal',
  shippingCost: 'shippingCost',
  tax: 'tax',
  total: 'total',
  status: 'status',
  paymentMethod: 'paymentMethod',
  paymentId: 'paymentId',
  shippingAddressId: 'shippingAddressId',
  billingAddressId: 'billingAddressId',
  trackingNumber: 'trackingNumber',
  notes: 'notes',
  shippedAt: 'shippedAt',
  deliveredAt: 'deliveredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity',
  itemType: 'itemType',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  selectedSize: 'selectedSize',
  selectedColor: 'selectedColor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DeliveryZoneScalarFieldEnum = {
  id: 'id',
  name: 'name',
  basePrice: 'basePrice',
  pricePerKm: 'pricePerKm',
  freeDeliveryThreshold: 'freeDeliveryThreshold',
  supportsUrgentDelivery: 'supportsUrgentDelivery',
  polygonCoordinates: 'polygonCoordinates',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DeliveryPricingRuleScalarFieldEnum = {
  id: 'id',
  zoneId: 'zoneId',
  dayOfWeek: 'dayOfWeek',
  startHour: 'startHour',
  endHour: 'endHour',
  multiplier: 'multiplier',
  isUrgent: 'isUrgent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message',
  type: 'type',
  isRead: 'isRead',
  data: 'data',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orderId: 'orderId',
  productId: 'productId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  profileImage: 'profileImage',
  passwordHash: 'passwordHash',
  fcmToken: 'fcmToken'
};

exports.Prisma.AddressOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  phone: 'phone',
  label: 'label'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.BrandOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  gasColor: 'gasColor',
  description: 'description',
  hotline: 'hotline',
  website: 'website'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  currentName: 'currentName',
  usage: 'usage',
  size: 'size',
  unit: 'unit'
};

exports.Prisma.TypeOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  id: 'id',
  brandId: 'brandId',
  categoryId: 'categoryId',
  typeId: 'typeId',
  imageUrl: 'imageUrl'
};

exports.Prisma.ShopOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  state: 'state',
  phone: 'phone',
  email: 'email'
};

exports.Prisma.ShopStockOrderByRelevanceFieldEnum = {
  id: 'id',
  shopId: 'shopId',
  productId: 'productId'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  orderNumber: 'orderNumber',
  paymentId: 'paymentId',
  shippingAddressId: 'shippingAddressId',
  billingAddressId: 'billingAddressId',
  trackingNumber: 'trackingNumber',
  notes: 'notes'
};

exports.Prisma.OrderItemOrderByRelevanceFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  selectedSize: 'selectedSize',
  selectedColor: 'selectedColor'
};

exports.Prisma.DeliveryZoneOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.DeliveryPricingRuleOrderByRelevanceFieldEnum = {
  id: 'id',
  zoneId: 'zoneId'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  orderId: 'orderId',
  productId: 'productId',
  comment: 'comment'
};
exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  RETURNED: 'RETURNED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  PAYPAL: 'PAYPAL',
  APPLE_PAY: 'APPLE_PAY',
  GOOGLE_PAY: 'GOOGLE_PAY',
  BANK_TRANSFER: 'BANK_TRANSFER',
  CASH_ON_DELIVERY: 'CASH_ON_DELIVERY'
};

exports.CartItemType = exports.$Enums.CartItemType = {
  PURCHASE: 'PURCHASE',
  REFILL: 'REFILL'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  ORDER: 'ORDER',
  PROMOTION: 'PROMOTION',
  SYSTEM: 'SYSTEM'
};

exports.Prisma.ModelName = {
  User: 'User',
  Address: 'Address',
  Brand: 'Brand',
  Category: 'Category',
  Type: 'Type',
  Product: 'Product',
  Shop: 'Shop',
  ShopStock: 'ShopStock',
  Order: 'Order',
  OrderItem: 'OrderItem',
  DeliveryZone: 'DeliveryZone',
  DeliveryPricingRule: 'DeliveryPricingRule',
  Notification: 'Notification',
  Review: 'Review'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Volumes/SnoliGroup/Projets/flam_all/flam_server/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Volumes/SnoliGroup/Projets/flam_all/flam_server/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              String   @id @default(cuid())\n  email           String   @unique\n  firstName       String   @map(\"first_name\")\n  lastName        String   @map(\"last_name\")\n  phone           String?\n  profileImage    String?  @map(\"profile_image\")\n  passwordHash    String   @map(\"password_hash\")\n  isEmailVerified Boolean  @default(false) @map(\"is_email_verified\")\n  isPhoneVerified Boolean  @default(false) @map(\"is_phone_verified\")\n  fcmToken        String?  @map(\"fcm_token\")\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n  updatedAt       DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  addresses     Address[]\n  orders        Order[]\n  notifications Notification[]\n  reviews       Review[]\n\n  @@map(\"users\")\n}\n\nmodel Address {\n  id            String   @id @default(cuid())\n  userId        String   @map(\"user_id\")\n  firstName     String   @map(\"first_name\")\n  lastName      String   @map(\"last_name\")\n  address       String\n  city          String\n  state         String\n  zipCode       String   @map(\"zip_code\")\n  country       String\n  phone         String?\n  isDefault     Boolean  @default(false) @map(\"is_default\")\n  label         String? // Maison, Bureau, etc.\n  latitude      Decimal? @db.Decimal(10, 8)\n  longitude     Decimal? @db.Decimal(11, 8)\n  inServiceZone Boolean  @default(false) @map(\"in_service_zone\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n  shippingOrders Order[] @relation(\"ShippingAddress\")\n  billingOrders  Order[] @relation(\"BillingAddress\")\n\n  @@map(\"addresses\")\n}\n\nmodel Brand {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  logo        String?\n  colors      Json? // Array of colors\n  gasColor    String?  @map(\"gas_color\")\n  description String?\n  hotline     String?\n  website     String?\n  isActive    Boolean  @default(true) @map(\"is_active\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  products Product[]\n\n  @@map(\"brands\")\n}\n\nmodel Category {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  pricePurchase Decimal  @map(\"price_purchase\") @db.Decimal(10, 2)\n  priceRefill   Decimal  @map(\"price_refill\") @db.Decimal(10, 2)\n  currentName   String?  @map(\"current_name\")\n  usage         String?\n  size          String?\n  weight        Decimal? @db.Decimal(8, 2)\n  unit          String?\n  isActive      Boolean  @default(true) @map(\"is_active\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  products Product[]\n\n  @@map(\"categories\")\n}\n\nmodel Type {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  isActive  Boolean  @default(true) @map(\"is_active\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  products Product[]\n\n  @@map(\"types\")\n}\n\nmodel Product {\n  id         String   @id @default(cuid())\n  brandId    String   @map(\"brand_id\")\n  categoryId String   @map(\"category_id\")\n  typeId     String   @map(\"type_id\")\n  rating     Decimal  @default(0) @db.Decimal(3, 2)\n  imageUrl   String?  @map(\"image_url\")\n  isActive   Boolean  @default(true) @map(\"is_active\")\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  brand      Brand       @relation(fields: [brandId], references: [id])\n  category   Category    @relation(fields: [categoryId], references: [id])\n  type       Type        @relation(fields: [typeId], references: [id])\n  orderItems OrderItem[]\n  shopStocks ShopStock[]\n  reviews    Review[]\n\n  @@map(\"products\")\n}\n\nmodel Shop {\n  id        String   @id @default(cuid())\n  name      String\n  address   String\n  city      String\n  state     String\n  latitude  Decimal  @db.Decimal(10, 8)\n  longitude Decimal  @db.Decimal(11, 8)\n  phone     String\n  email     String?\n  isActive  Boolean  @default(true) @map(\"is_active\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  stocks ShopStock[]\n\n  @@map(\"shops\")\n}\n\nmodel ShopStock {\n  id        String   @id @default(cuid())\n  shopId    String   @map(\"shop_id\")\n  productId String   @map(\"product_id\")\n  quantity  Int\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  shop    Shop    @relation(fields: [shopId], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@unique([shopId, productId])\n  @@map(\"shop_stocks\")\n}\n\nmodel Order {\n  id                String        @id @default(cuid())\n  userId            String        @map(\"user_id\")\n  orderNumber       String        @unique @map(\"order_number\")\n  subtotal          Decimal       @db.Decimal(10, 2)\n  shippingCost      Decimal       @map(\"shipping_cost\") @db.Decimal(10, 2)\n  tax               Decimal       @db.Decimal(10, 2)\n  total             Decimal       @db.Decimal(10, 2)\n  status            OrderStatus\n  paymentMethod     PaymentMethod @map(\"payment_method\")\n  paymentId         String?       @map(\"payment_id\")\n  shippingAddressId String        @map(\"shipping_address_id\")\n  billingAddressId  String        @map(\"billing_address_id\")\n  trackingNumber    String?       @map(\"tracking_number\")\n  notes             String?\n  shippedAt         DateTime?     @map(\"shipped_at\")\n  deliveredAt       DateTime?     @map(\"delivered_at\")\n  createdAt         DateTime      @default(now()) @map(\"created_at\")\n  updatedAt         DateTime      @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user            User        @relation(fields: [userId], references: [id])\n  shippingAddress Address     @relation(\"ShippingAddress\", fields: [shippingAddressId], references: [id])\n  billingAddress  Address     @relation(\"BillingAddress\", fields: [billingAddressId], references: [id])\n  items           OrderItem[]\n\n  @@map(\"orders\")\n}\n\nmodel OrderItem {\n  id            String       @id @default(cuid())\n  orderId       String       @map(\"order_id\")\n  productId     String       @map(\"product_id\")\n  quantity      Int\n  itemType      CartItemType @map(\"item_type\")\n  unitPrice     Decimal      @map(\"unit_price\") @db.Decimal(10, 2)\n  totalPrice    Decimal      @map(\"total_price\") @db.Decimal(10, 2)\n  selectedSize  String?      @map(\"selected_size\")\n  selectedColor String?      @map(\"selected_color\")\n  createdAt     DateTime     @default(now()) @map(\"created_at\")\n  updatedAt     DateTime     @updatedAt @map(\"updated_at\")\n\n  // Relations\n  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [productId], references: [id])\n\n  @@map(\"order_items\")\n}\n\nmodel DeliveryZone {\n  id                     String   @id @default(cuid())\n  name                   String   @unique\n  basePrice              Decimal  @map(\"base_price\") @db.Decimal(10, 2)\n  pricePerKm             Decimal  @map(\"price_per_km\") @db.Decimal(10, 2)\n  freeDeliveryThreshold  Decimal? @map(\"free_delivery_threshold\") @db.Decimal(10, 2)\n  supportsUrgentDelivery Boolean  @default(true) @map(\"supports_urgent_delivery\")\n  polygonCoordinates     Json     @map(\"polygon_coordinates\")\n  isActive               Boolean  @default(true) @map(\"is_active\")\n  createdAt              DateTime @default(now()) @map(\"created_at\")\n  updatedAt              DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  pricingRules DeliveryPricingRule[]\n\n  @@map(\"delivery_zones\")\n}\n\nmodel DeliveryPricingRule {\n  id         String   @id @default(cuid())\n  zoneId     String   @map(\"zone_id\")\n  dayOfWeek  Int      @map(\"day_of_week\") // 1-7 (Monday-Sunday)\n  startHour  Int      @map(\"start_hour\") // 0-23\n  endHour    Int      @map(\"end_hour\") // 0-23\n  multiplier Decimal  @db.Decimal(3, 2) // e.g., 1.20 for +20%\n  isUrgent   Boolean  @default(false) @map(\"is_urgent\")\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  updatedAt  DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  zone DeliveryZone @relation(fields: [zoneId], references: [id], onDelete: Cascade)\n\n  @@map(\"delivery_pricing_rules\")\n}\n\nmodel Notification {\n  id        String           @id @default(cuid())\n  userId    String           @map(\"user_id\")\n  title     String\n  message   String\n  type      NotificationType\n  isRead    Boolean          @default(false) @map(\"is_read\")\n  data      Json? // Additional data for the notification\n  createdAt DateTime         @default(now()) @map(\"created_at\")\n  updatedAt DateTime         @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notifications\")\n}\n\nmodel Review {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  orderId   String   @map(\"order_id\")\n  productId String   @map(\"product_id\")\n  rating    Int // 1-5 stars\n  comment   String?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, orderId, productId])\n  @@map(\"reviews\")\n}\n\n// Enums\nenum OrderStatus {\n  PENDING\n  CONFIRMED\n  PROCESSING\n  SHIPPED\n  DELIVERED\n  CANCELLED\n  RETURNED\n}\n\nenum PaymentMethod {\n  CREDIT_CARD\n  DEBIT_CARD\n  PAYPAL\n  APPLE_PAY\n  GOOGLE_PAY\n  BANK_TRANSFER\n  CASH_ON_DELIVERY\n}\n\nenum CartItemType {\n  PURCHASE\n  REFILL\n}\n\nenum NotificationType {\n  ORDER\n  PROMOTION\n  SYSTEM\n}\n",
  "inlineSchemaHash": "bfe501d8688f054891edd34d69321393f14e8a532cb44c865162fce87b463908",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_email_verified\"},{\"name\":\"isPhoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_phone_verified\"},{\"name\":\"fcmToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"fcm_token\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"}],\"dbName\":\"users\"},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"zip_code\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_default\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"inServiceZone\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"in_service_zone\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AddressToUser\"},{\"name\":\"shippingOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"ShippingAddress\"},{\"name\":\"billingOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"BillingAddress\"}],\"dbName\":\"addresses\"},\"Brand\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"gasColor\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gas_color\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"BrandToProduct\"}],\"dbName\":\"brands\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pricePurchase\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"price_purchase\"},{\"name\":\"priceRefill\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"price_refill\"},{\"name\":\"currentName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"current_name\"},{\"name\":\"usage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":\"categories\"},\"Type\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToType\"}],\"dbName\":\"types\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brandId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"brand_id\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"category_id\"},{\"name\":\"typeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"type_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"brand\",\"kind\":\"object\",\"type\":\"Brand\",\"relationName\":\"BrandToProduct\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"type\",\"kind\":\"object\",\"type\":\"Type\",\"relationName\":\"ProductToType\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"shopStocks\",\"kind\":\"object\",\"type\":\"ShopStock\",\"relationName\":\"ProductToShopStock\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProductToReview\"}],\"dbName\":\"products\"},\"Shop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"stocks\",\"kind\":\"object\",\"type\":\"ShopStock\",\"relationName\":\"ShopToShopStock\"}],\"dbName\":\"shops\"},\"ShopStock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"shop_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"shop\",\"kind\":\"object\",\"type\":\"Shop\",\"relationName\":\"ShopToShopStock\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToShopStock\"}],\"dbName\":\"shop_stocks\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_number\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shippingCost\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"shipping_cost\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\",\"dbName\":\"payment_method\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_id\"},{\"name\":\"shippingAddressId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"shipping_address_id\"},{\"name\":\"billingAddressId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"billing_address_id\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tracking_number\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"shipped_at\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"delivered_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"shippingAddress\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"ShippingAddress\"},{\"name\":\"billingAddress\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"BillingAddress\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"}],\"dbName\":\"orders\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"itemType\",\"kind\":\"enum\",\"type\":\"CartItemType\",\"dbName\":\"item_type\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"unit_price\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"total_price\"},{\"name\":\"selectedSize\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"selected_size\"},{\"name\":\"selectedColor\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"selected_color\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":\"order_items\"},\"DeliveryZone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"base_price\"},{\"name\":\"pricePerKm\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"price_per_km\"},{\"name\":\"freeDeliveryThreshold\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"free_delivery_threshold\"},{\"name\":\"supportsUrgentDelivery\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"supports_urgent_delivery\"},{\"name\":\"polygonCoordinates\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"polygon_coordinates\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"pricingRules\",\"kind\":\"object\",\"type\":\"DeliveryPricingRule\",\"relationName\":\"DeliveryPricingRuleToDeliveryZone\"}],\"dbName\":\"delivery_zones\"},\"DeliveryPricingRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zoneId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"zone_id\"},{\"name\":\"dayOfWeek\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"day_of_week\"},{\"name\":\"startHour\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"start_hour\"},{\"name\":\"endHour\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"end_hour\"},{\"name\":\"multiplier\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isUrgent\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_urgent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"DeliveryZone\",\"relationName\":\"DeliveryPricingRuleToDeliveryZone\"}],\"dbName\":\"delivery_pricing_rules\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToReview\"}],\"dbName\":\"reviews\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

