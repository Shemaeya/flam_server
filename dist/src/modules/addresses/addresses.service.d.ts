import { PrismaService } from '../../prisma/prisma.service';
import { CreateAddressDto, UpdateAddressDto } from './dto/address.dto';
export declare class AddressesService {
    private prisma;
    constructor(prisma: PrismaService);
    create(userId: string, createAddressDto: CreateAddressDto): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string;
        city: string;
        state: string;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        phone: string | null;
        firstName: string;
        lastName: string;
        zipCode: string;
        country: string;
        isDefault: boolean;
        label: string | null;
        inServiceZone: boolean;
        userId: string;
    }>;
    findAll(userId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string;
        city: string;
        state: string;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        phone: string | null;
        firstName: string;
        lastName: string;
        zipCode: string;
        country: string;
        isDefault: boolean;
        label: string | null;
        inServiceZone: boolean;
        userId: string;
    }[]>;
    findOne(id: string, userId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string;
        city: string;
        state: string;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        phone: string | null;
        firstName: string;
        lastName: string;
        zipCode: string;
        country: string;
        isDefault: boolean;
        label: string | null;
        inServiceZone: boolean;
        userId: string;
    }>;
    update(id: string, userId: string, updateAddressDto: UpdateAddressDto): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string;
        city: string;
        state: string;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        phone: string | null;
        firstName: string;
        lastName: string;
        zipCode: string;
        country: string;
        isDefault: boolean;
        label: string | null;
        inServiceZone: boolean;
        userId: string;
    }>;
    remove(id: string, userId: string): Promise<{
        message: string;
    }>;
    setDefault(id: string, userId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string;
        city: string;
        state: string;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        phone: string | null;
        firstName: string;
        lastName: string;
        zipCode: string;
        country: string;
        isDefault: boolean;
        label: string | null;
        inServiceZone: boolean;
        userId: string;
    }>;
    checkServiceZone(latitude: number, longitude: number): Promise<{
        inServiceZone: boolean;
    }>;
    private checkIfInServiceZone;
    private isPointInPolygon;
}
